{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-10T16:19:29.079Z",
    "end": "2022-08-10T16:19:29.137Z",
    "duration": 58,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6f6fee31-6d3b-4f2f-9387-ff9e3f62e4d2",
      "title": "",
      "fullFile": "H:\\SQA Tech\\homework_minicampSQA_fazztrack\\sesi5_apiAutomation\\testcases\\getById-user.js",
      "file": "\\testcases\\getById-user.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "063b5532-d28a-4d25-8c69-78da0aeba826",
          "title": "[@GETbyId Data User]",
          "fullFile": "H:\\SQA Tech\\homework_minicampSQA_fazztrack\\sesi5_apiAutomation\\testcases\\getById-user.js",
          "file": "\\testcases\\getById-user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[@getById-positive-case1] User menggunakan data user id yang valid",
              "fullTitle": "[@GETbyId Data User] [@getById-positive-case1] User menggunakan data user id yang valid",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = \"b0ad5756-942f-4535-9ce6-7b4e49dafd1d\";\nlet responApi = await api.getByIdUser(id);\nexpect(responApi.statusCode).to.equal(200);\nexpect(responApi.body.id).to.equal(id);\nexpect(responApi.body).has.jsonSchema(jsonSchemaGetId);",
              "err": {},
              "uuid": "46aab72d-01e3-4896-8838-1fef2ecf1cd2",
              "parentUUID": "063b5532-d28a-4d25-8c69-78da0aeba826",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@getById-negative-case1] User gagal mendapatkan data ketika data id yang diinputkan invalid",
              "fullTitle": "[@GETbyId Data User] [@getById-negative-case1] User gagal mendapatkan data ketika data id yang diinputkan invalid",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const Id = \"random-string\";\nlet responApi = await api.getByIdUser(Id);\nexpect(responApi.body.errorCode).to.equal(\"ER-01\");\nexpect(responApi.body.statusCode).to.equal(404);\nexpect(responApi.body.message).to.equal('user not found');",
              "err": {},
              "uuid": "87ce749b-f085-43b8-a0c9-24c3cacfe18b",
              "parentUUID": "063b5532-d28a-4d25-8c69-78da0aeba826",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46aab72d-01e3-4896-8838-1fef2ecf1cd2",
            "87ce749b-f085-43b8-a0c9-24c3cacfe18b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}