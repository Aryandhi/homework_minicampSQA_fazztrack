{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-15T09:05:14.935Z",
    "end": "2022-08-15T09:05:15.073Z",
    "duration": 138,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "648b1f6d-499f-4bf3-98d6-807f3427f47a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4f90b6a4-7de8-4182-b56b-37c871e1a73b",
          "title": "[@GETbyId Data User]",
          "fullFile": "H:\\SQA Tech\\homework_minicampSQA_fazztrack\\sesi5_apiAutomation\\testcases\\getById-user.js",
          "file": "\\testcases\\getById-user.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@GETbyId Data User]\"",
              "fullTitle": "[@GETbyId Data User] \"before all\" hook in \"[@GETbyId Data User]\"",
              "timedOut": false,
              "duration": 42,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.postUser(requestBodyPost);",
              "err": {},
              "uuid": "4f86c837-678a-4d0c-9172-b0f3be2c99ef",
              "parentUUID": "4f90b6a4-7de8-4182-b56b-37c871e1a73b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@GETbyId Data User]\"",
              "fullTitle": "[@GETbyId Data User] \"after all\" hook in \"[@GETbyId Data User]\"",
              "timedOut": false,
              "duration": 7,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.removeAll();",
              "err": {},
              "uuid": "d5a268e9-9ea9-47c6-8bc0-f96d777bf8fa",
              "parentUUID": "4f90b6a4-7de8-4182-b56b-37c871e1a73b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@getById-positive-case1] User menggunakan data user id yang valid",
              "fullTitle": "[@GETbyId Data User] [@getById-positive-case1] User menggunakan data user id yang valid",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const id = body.id; //harus dinamis\nlet response = await api.getByIdUser(responseApi._body.id);\nexpect(response.statusCode).to.equal(200);\nexpect(response.body.id).to.equal(responseApi._body.id);\nexpect(response.body).has.jsonSchema(jsonSchemaGetId);",
              "err": {},
              "uuid": "7b8e1880-8b2c-46ab-9249-1a11a55492b7",
              "parentUUID": "4f90b6a4-7de8-4182-b56b-37c871e1a73b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@getById-negative-case1] User gagal mendapatkan data ketika data id yang diinputkan invalid",
              "fullTitle": "[@GETbyId Data User] [@getById-negative-case1] User gagal mendapatkan data ketika data id yang diinputkan invalid",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const Id = \"random-string\";\nlet responApi = await api.getByIdUser(Id);\nexpect(responApi.body.errorCode).to.equal(\"ER-01\");\nexpect(responApi.body.statusCode).to.equal(404);\nexpect(responApi.body.message).to.equal('user not found');",
              "err": {},
              "uuid": "1825fbd0-af47-4034-b698-f2ef8928af4e",
              "parentUUID": "4f90b6a4-7de8-4182-b56b-37c871e1a73b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b8e1880-8b2c-46ab-9249-1a11a55492b7",
            "1825fbd0-af47-4034-b698-f2ef8928af4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ba79e2de-6a40-424b-9600-2f7c738ee693",
          "title": "[@PUT Data User]",
          "fullFile": "H:\\SQA Tech\\homework_minicampSQA_fazztrack\\sesi5_apiAutomation\\testcases\\put-user.js",
          "file": "\\testcases\\put-user.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@PUT Data User]\"",
              "fullTitle": "[@PUT Data User] \"before all\" hook in \"[@PUT Data User]\"",
              "timedOut": false,
              "duration": 8,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.postUser(requestBodyPost);",
              "err": {},
              "uuid": "386a354f-cfe1-454c-9e3f-4c6acb8fcabf",
              "parentUUID": "ba79e2de-6a40-424b-9600-2f7c738ee693",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@PUT Data User]\"",
              "fullTitle": "[@PUT Data User] \"after all\" hook in \"[@PUT Data User]\"",
              "timedOut": false,
              "duration": 4,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.removeAll();",
              "err": {},
              "uuid": "093387c6-3889-48dc-9cda-b4f8052712b8",
              "parentUUID": "ba79e2de-6a40-424b-9600-2f7c738ee693",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@putPositiveCase1] User berhasil mengupdate data Occupation dan Nationality",
              "fullTitle": "[@PUT Data User] [@putPositiveCase1] User berhasil mengupdate data Occupation dan Nationality",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sendRequestPut = {\n  id: responseApi._body.id,\n  firstName: requestBodyPut.firstName,\n  lastName: requestBodyPut.lastName,\n  age: requestBodyPut.age,\n  occupation: requestBodyPut.occupation,\n  nationality: requestBodyPut.nationality,\n  hobbies: requestBodyPut.hobbies,\n  gender: requestBodyPut.gender,\n  createdDate: requestBodyPut.createdDate,\n  updatedDate: requestBodyPut.updatedDate\n}\nresponseApi = await api.putUser(sendRequestPut);\nexpect(responseApi.statusCode).to.equal(200);\nexpect(responseApi.request._data.occupation).to.equal(sendRequestPut.occupation);\nexpect(responseApi.request._data.nationality).to.equal(sendRequestPut.nationality);\nexpect(responseApi.body).has.jsonSchema(jsonSchemaPUT);",
              "err": {},
              "uuid": "522e8bf0-9987-476f-9df6-dbb71745fa9a",
              "parentUUID": "ba79e2de-6a40-424b-9600-2f7c738ee693",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@putNegativeCase1] User gagal mengupdate data ketika age bernilai 0",
              "fullTitle": "[@PUT Data User] [@putNegativeCase1] User gagal mengupdate data ketika age bernilai 0",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sendRequestPut = {\n  id: responseApi._body.id,\n  firstName: requestBodyPut.firstName,\n  lastName: requestBodyPut.lastName,\n  age: 0,\n  occupation: requestBodyPut.occupation,\n  nationality: requestBodyPut.nationality,\n  hobbies: requestBodyPut.hobbies,\n  gender: requestBodyPut.gender,\n  createdDate: requestBodyPut.createdDate,\n  updatedDate: requestBodyPut.updatedDate\n}\nresponseApi = await api.putUser(sendRequestPut);\nlet err = \"you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender\"\nexpect(responseApi._body.statusCode).to.equal(400);\nexpect(responseApi.request._data.age).to.equal(0);\nexpect(responseApi._body.message).to.equal(err);",
              "err": {},
              "uuid": "b67bf321-3a95-406a-832e-d8f319803c93",
              "parentUUID": "ba79e2de-6a40-424b-9600-2f7c738ee693",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@putNegativeCase2] User gagal mengupdate data ketika data hobbies merupakan empty array",
              "fullTitle": "[@PUT Data User] [@putNegativeCase2] User gagal mengupdate data ketika data hobbies merupakan empty array",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sendRequestPut = {\n  id: responseApi._body.id,\n  firstName: requestBodyPut.firstName,\n  lastName: requestBodyPut.lastName,\n  age: requestBodyPut.age,\n  occupation: requestBodyPut.occupation,\n  nationality: requestBodyPut.nationality,\n  hobbies: [],\n  gender: requestBodyPut.gender,\n  createdDate: requestBodyPut.createdDate,\n  updatedDate: requestBodyPut.updatedDate\n}\nresponseApi = await api.putUser(sendRequestPut);\nlet err = 'you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender';\nexpect(responseApi._body.statusCode).to.equal(400);\nexpect(responseApi.request._data.hobbies.length).to.equal(0);\nexpect(responseApi._body.message).to.be.equal(err);",
              "err": {},
              "uuid": "1859f48b-6c4b-4ed3-b61f-1898c32a926a",
              "parentUUID": "ba79e2de-6a40-424b-9600-2f7c738ee693",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@putNegativeCase3] User gagal mengupdate data ketika data id null",
              "fullTitle": "[@PUT Data User] [@putNegativeCase3] User gagal mengupdate data ketika data id null",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let err = \"user not found\";\nresponseApi = await api.putUser(requestBodyPut);\nexpect(responseApi._body.statusCode).to.equal(404);\nexpect(responseApi.request._data.id).to.equal(undefined);\nexpect(responseApi._body.message).to.be.equal(err);",
              "err": {},
              "uuid": "2c13a607-926f-485b-b90e-020c587422ad",
              "parentUUID": "ba79e2de-6a40-424b-9600-2f7c738ee693",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "522e8bf0-9987-476f-9df6-dbb71745fa9a",
            "b67bf321-3a95-406a-832e-d8f319803c93",
            "1859f48b-6c4b-4ed3-b61f-1898c32a926a",
            "2c13a607-926f-485b-b90e-020c587422ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 34,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}