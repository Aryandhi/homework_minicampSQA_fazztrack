{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-16T00:56:39.410Z",
    "end": "2022-08-16T00:56:39.892Z",
    "duration": 482,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ed876c84-b6cf-4e94-a8e3-f32169d6804b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "90deb604-dda6-44f5-8a06-bfd91aa92822",
          "title": "[@GETbyId Data User]",
          "fullFile": "H:\\SQA Tech\\homework_minicampSQA_fazztrack\\sesi5_apiAutomation\\testcases\\getById-user.js",
          "file": "\\testcases\\getById-user.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@GETbyId Data User]\"",
              "fullTitle": "[@GETbyId Data User] \"before all\" hook in \"[@GETbyId Data User]\"",
              "timedOut": false,
              "duration": 331,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.postUser(requestBodyPost);",
              "err": {},
              "uuid": "9b96573e-b3d9-4079-899b-c4c8947bf940",
              "parentUUID": "90deb604-dda6-44f5-8a06-bfd91aa92822",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@GETbyId Data User]\"",
              "fullTitle": "[@GETbyId Data User] \"after all\" hook in \"[@GETbyId Data User]\"",
              "timedOut": false,
              "duration": 7,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.removeAll();",
              "err": {},
              "uuid": "0fb087e8-ad56-4cba-824f-31914696acf0",
              "parentUUID": "90deb604-dda6-44f5-8a06-bfd91aa92822",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@getById-positive-case1] User menggunakan data user id yang valid",
              "fullTitle": "[@GETbyId Data User] [@getById-positive-case1] User menggunakan data user id yang valid",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const id = body.id; //harus dinamis\nlet response = await api.getByIdUser(responseApi._body.id);\nexpect(response.statusCode).to.equal(200);\nexpect(response.body.id).to.equal(responseApi._body.id);\nexpect(response.body).has.jsonSchema(jsonSchemaGetId);",
              "err": {},
              "uuid": "beccd5f6-40c6-4665-ba7f-988e033a5bca",
              "parentUUID": "90deb604-dda6-44f5-8a06-bfd91aa92822",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@getById-negative-case1] User gagal mendapatkan data ketika data id yang diinputkan invalid",
              "fullTitle": "[@GETbyId Data User] [@getById-negative-case1] User gagal mendapatkan data ketika data id yang diinputkan invalid",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const Id = \"random-string\";\nlet responApi = await api.getByIdUser(Id);\nexpect(responApi.body.errorCode).to.equal(\"ER-01\");\nexpect(responApi.body.statusCode).to.equal(404);\nexpect(responApi.body.message).to.equal('user not found');",
              "err": {},
              "uuid": "d73c40bb-131b-42b4-bae8-284fd8486421",
              "parentUUID": "90deb604-dda6-44f5-8a06-bfd91aa92822",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "beccd5f6-40c6-4665-ba7f-988e033a5bca",
            "d73c40bb-131b-42b4-bae8-284fd8486421"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 39,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "783ac699-a04c-4f24-a2a2-f49b57098d0d",
          "title": "[@PUT Data User]",
          "fullFile": "H:\\SQA Tech\\homework_minicampSQA_fazztrack\\sesi5_apiAutomation\\testcases\\put-user.js",
          "file": "\\testcases\\put-user.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@PUT Data User]\"",
              "fullTitle": "[@PUT Data User] \"before all\" hook in \"[@PUT Data User]\"",
              "timedOut": false,
              "duration": 12,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.postUser(requestBodyPost);",
              "err": {},
              "uuid": "2ef1533a-5a17-4792-b4fb-2ac95aeb79ef",
              "parentUUID": "783ac699-a04c-4f24-a2a2-f49b57098d0d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@PUT Data User]\"",
              "fullTitle": "[@PUT Data User] \"after all\" hook in \"[@PUT Data User]\"",
              "timedOut": false,
              "duration": 8,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.removeAll();",
              "err": {},
              "uuid": "31d73366-925a-41cb-81f0-a9fcc6f7d566",
              "parentUUID": "783ac699-a04c-4f24-a2a2-f49b57098d0d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@putPositiveCase1] User berhasil mengupdate data Occupation dan Nationality",
              "fullTitle": "[@PUT Data User] [@putPositiveCase1] User berhasil mengupdate data Occupation dan Nationality",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sendRequestPut = {\n  id: responseApi._body.id,\n  firstName: requestBodyPut.firstName,\n  lastName: requestBodyPut.lastName,\n  age: requestBodyPut.age,\n  occupation: requestBodyPut.occupation,\n  nationality: requestBodyPut.nationality,\n  hobbies: requestBodyPut.hobbies,\n  gender: requestBodyPut.gender,\n  createdDate: requestBodyPut.createdDate,\n  updatedDate: requestBodyPut.updatedDate\n}\nresponseApi = await api.putUser(sendRequestPut);\nexpect(responseApi.statusCode).to.equal(200);\nexpect(responseApi.request._data.occupation).to.equal(sendRequestPut.occupation);\nexpect(responseApi.request._data.nationality).to.equal(sendRequestPut.nationality);\nexpect(responseApi.body).has.jsonSchema(jsonSchemaPUT);",
              "err": {},
              "uuid": "afeff5ee-3f4c-4994-b302-447b8004b6fb",
              "parentUUID": "783ac699-a04c-4f24-a2a2-f49b57098d0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@putNegativeCase1] User gagal mengupdate data ketika age bernilai 0",
              "fullTitle": "[@PUT Data User] [@putNegativeCase1] User gagal mengupdate data ketika age bernilai 0",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sendRequestPut = {\n  id: responseApi._body.id,\n  firstName: requestBodyPut.firstName,\n  lastName: requestBodyPut.lastName,\n  age: 0,\n  occupation: requestBodyPut.occupation,\n  nationality: requestBodyPut.nationality,\n  hobbies: requestBodyPut.hobbies,\n  gender: requestBodyPut.gender,\n  createdDate: requestBodyPut.createdDate,\n  updatedDate: requestBodyPut.updatedDate\n}\nresponseApi = await api.putUser(sendRequestPut);\nlet err = \"you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender\"\nexpect(responseApi._body.statusCode).to.equal(400);\nexpect(responseApi.request._data.age).to.equal(0);\nexpect(responseApi._body.message).to.equal(err);",
              "err": {},
              "uuid": "c3b0183a-c2ac-4135-9aa1-5781a6d5fa8d",
              "parentUUID": "783ac699-a04c-4f24-a2a2-f49b57098d0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@putNegativeCase2] User gagal mengupdate data ketika data hobbies merupakan empty array",
              "fullTitle": "[@PUT Data User] [@putNegativeCase2] User gagal mengupdate data ketika data hobbies merupakan empty array",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sendRequestPut = {\n  id: responseApi._body.id,\n  firstName: requestBodyPut.firstName,\n  lastName: requestBodyPut.lastName,\n  age: requestBodyPut.age,\n  occupation: requestBodyPut.occupation,\n  nationality: requestBodyPut.nationality,\n  hobbies: [],\n  gender: requestBodyPut.gender,\n  createdDate: requestBodyPut.createdDate,\n  updatedDate: requestBodyPut.updatedDate\n}\nresponseApi = await api.putUser(sendRequestPut);\nlet err = 'you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender';\nexpect(responseApi._body.statusCode).to.equal(400);\nexpect(responseApi.request._data.hobbies.length).to.equal(0);\nexpect(responseApi._body.message).to.be.equal(err);",
              "err": {},
              "uuid": "c0da8ab0-2384-4f95-b656-af3a24b55a4a",
              "parentUUID": "783ac699-a04c-4f24-a2a2-f49b57098d0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@putNegativeCase3] User gagal mengupdate data ketika data id null",
              "fullTitle": "[@PUT Data User] [@putNegativeCase3] User gagal mengupdate data ketika data id null",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let err = \"user not found\";\nresponseApi = await api.putUser(requestBodyPut);\nexpect(responseApi._body.statusCode).to.equal(404);\nexpect(responseApi.request._data.id).to.equal(undefined);\nexpect(responseApi._body.message).to.be.equal(err);",
              "err": {},
              "uuid": "59962ae9-60e6-4a6f-a8c1-dbe7cef30824",
              "parentUUID": "783ac699-a04c-4f24-a2a2-f49b57098d0d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "afeff5ee-3f4c-4994-b302-447b8004b6fb",
            "c3b0183a-c2ac-4135-9aa1-5781a6d5fa8d",
            "c0da8ab0-2384-4f95-b656-af3a24b55a4a",
            "59962ae9-60e6-4a6f-a8c1-dbe7cef30824"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 46,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}